name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
jobs:
  test:
    name: Test and maybe tag
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Register formulations
        uses: opvious/register-specification-action@beta
        with:
          token: ${{ secrets.OPVIOUS_ALPHA_TOKEN }}
          domain: alpha.opvious.io
          sources: tests/sources/*.md
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.2.2'
      - name: Extract version
        id: extract-version
        run: |
          PACKAGE_VERSION="$(./scripts/version.sh show)"
          echo "::set-output name=version::$PACKAGE_VERSION"
      - name: Install dependencies
        run: poetry install --all-extras
      - name: Lint
        run: |
          poetry run black . --check
          poetry run flake8
          poetry run mypy .
      - name: Test
        run: poetry run pytest
        env:
          OPVIOUS_TOKEN: ${{ secrets.OPVIOUS_ALPHA_TOKEN }}
          OPVIOUS_DOMAIN: alpha.opvious.io
      - name: Publish
        run: poetry publish --build
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.1.0
        id: check-version
        with:
          tag: v${{ steps.extract-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag
        if: steps.check-version.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.extract-version.outputs.version }}
